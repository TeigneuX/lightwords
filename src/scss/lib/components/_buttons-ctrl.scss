/* BUTTONS-CTRL */

$btn-ctrl-size: $navbar-btn-size;
$btn-ctrl-border-size: 2px;
$btn-ctrl-color: black;
$btn-ctrl-bg-color: white;

// MIXINS

// Button color
@mixin btn-ctrl-color(
  $inverted: false,
  $color: $btn-ctrl-color,
  $bg-color: $btn-ctrl-bg-color,
) {
  // Swap colors
  @if $inverted {
    $tmp: $color;
    $color: $bg-color;
    $bg-color: $tmp;
  }

  background: $bg-color !important;
  color: $color;

  > span.btn-ctrl-extra {
    background-color: $color;
  }

  &::before,
  &::after {
    background-color: $color;
  }

  &.btn-ctrl-search {
    &::before {
      background-color: $bg-color;
      color: $color;
    }
  }
  &.btn-ctrl-menu {
    > span.btn-ctrl-extra {
      background-color: $color;
    }
  }

  @include hocus() {
    background-color: $color !important;
    color: $color !important;
  
    &::before,
    &::after {
      background-color: $bg-color;
    }
  
    &.btn-ctrl-search {
      &::before {
        background-color: $color;
        color: $bg-color;
      }
    }
    &.btn-ctrl-menu {
      > span.btn-ctrl-extra {
        background-color: $bg-color;
      }
    }
  }
}

// Button icon
@mixin btn-ctrl-icon(
  $type: "cancel",
  $size: $btn-ctrl-size,
  $border-size: $btn-ctrl-border-size
) {

  > span.btn-ctrl-extra,
  &::before,
  &::after {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    transition: all 0.25s;
  }

  > span.btn-ctrl-extra {
    transform: translate3d(-50%, -50%, 0);
  }

  &::before,
  &::after {
    content: "";
    width: 50%;
    height: $border-size;
  }

  &::before {
    transform: translate3d(-50%, -50%, 0) rotateZ(45deg);
  }
  &::after {
    transform: translate3d(-50%, -50%, 0) rotateZ(-45deg);
  }

  @if $type == "cancel" {
  } @else if $type == "plus" {
    &::before {
      transform: translate3d(-50%, -50%, 0);
    }
    &::after {
      transform: translate3d(-50%, -50%, 0) rotateZ(-90deg);
    }
  } @else if $type == "minus" {
    &::before {
      transform: translate3d(-50%, -50%, 0);
    }
    &::after {
      transform: translate3d(-50%, -50%, 0);
    }
  } @else if $type == "left" {
    &::before,
    &::after {
      width: 25%;
      transform-origin: 0.1rem 50%;
    }
  } @else if $type == "right" {
    &::before,
    &::after {
      width: 25%;
      transform-origin: calc(100% - 0.1rem) 50%;
    }
  } @else if $type == "down" {
    &::before,
    &::after {
      width: $border-size;
      height: 25%;
      transform-origin: 50% calc(100% - 0.1rem);
    }
    &::before {
      transform: translate3d(-50%, -50%, 0) rotateZ(45deg);
    }
    &::after {
      transform: translate3d(-50%, -50%, 0) rotateZ(-45deg);
    }
  } @else if $type == "up" {
    &::before,
    &::after {
      width: $border-size;
      height: 25%;
      transform-origin: 50% 0.1rem;
    }
    &::before {
      transform: translate3d(-50%, -50%, 0) rotateZ(45deg);
    }
    &::after {
      transform: translate3d(-50%, -50%, 0) rotateZ(-45deg);
    }
  } @else if $type == "menu" {
    $burger-ratio: 30%;

    > span.btn-ctrl-extra,
    &::before,
    &::after {
      width: $burger-ratio * 1.5;
      height: $border-size;
    }
    &::before {
      top: (100% - $burger-ratio) / 2;
      transform: translate3d(-50%, -50%, 0);
      // Middle bar hack
      // box-shadow: 0 ($size * 0.14) 0 0 black;
    }
    &::after {
      top: 100% - ((100% - $burger-ratio) / 2);
      // top: auto;
      transform: translate3d(-50%, -50%, 0);
    }
  } @else if $type == "search" {
    &::before {
      @include size(40%);
      transform: translate3d(-50%, -50%, 0);
      border: $border-size solid currentColor;
      // box-shadow: 0 0 0 $border-size currentColor;
      border-radius: 50%;
    }
    &::after {
      left: 50% + 40% / 2;
      top: 50% + 40% / 2;
      width: $border-size;
      height: 20%;
      transform: translate3d(-50%, -50%, 0) rotateZ(-45deg);
    }
  }
}

// Main mixin
@mixin btn-ctrl(
  $type: "cancel", 
  $size: $btn-ctrl-size,
  $border-size: $btn-ctrl-border-size
) {
  // @include size($size);
  width: $size !important;
  height: $size !important;
  @include btn-ctrl-icon($type, $size, $border-size);
  @include btn-ctrl-color();
  border: $btn-ctrl-border-size solid transparent;
}

// Helper classes

.btn-ctrl-left {
  @include btn-ctrl("left");
}
.btn-ctrl-right {
  @include btn-ctrl("right");
}
.btn-ctrl-up {
  @include btn-ctrl("up");
}
.btn-ctrl-down {
  @include btn-ctrl("down");
}
.btn-ctrl-close {
  @include btn-ctrl("close");
}
.btn-ctrl-plus {
  @include btn-ctrl("plus");
}
.btn-ctrl-minus {
  @include btn-ctrl("minus");
}
.btn-ctrl-menu {
  @include btn-ctrl("menu");
}
.btn-ctrl-search {
  @include btn-ctrl("search");
}

.btn-ctrl-inverted {
  @include btn-ctrl-color(true);
}

.btn-ctrl-border {
  border: $btn-ctrl-border-size solid;
}

////////////////////////////////////////////////////////////////////////////////
// VENDOR OVERRIDES

// TODO: remove all `!important` above, revamp code below (+lightbox)!

// Owl Carousel (aka Slide Anything)
// Specificity war!

html .white .sa_owl_theme .owl-nav .owl-prev {
  @include btn-ctrl("left");
}

html .white .sa_owl_theme .owl-nav .owl-next {
  @include btn-ctrl("right");
}

// Smart Slider 3

.nextend-arrow {
  &.nextend-arrow-previous {
    @include btn-ctrl("left");
  }

  &.nextend-arrow-next {
    @include btn-ctrl("right");
  }

  > img {
    display: none !important;
  }
}

