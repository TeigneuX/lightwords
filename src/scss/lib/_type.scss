// LENGTH UNITS HELPERS

$px-by-rem-ratio: 10;  // By convention, shouldn't change

// STRIP UNIT

// See: https://css-tricks.com/snippets/sass/strip-unit-function/

/// Remove the unit of a length
/// @param {Number} $number - Number to remove unit from
/// @return {Number} - Unitless number
@function strip-unit($number) {

  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}


// PIXELS AND REM CONVERSION

@function px2rem($value, $strip-unit: "no-strip") {

  @if type-of($value) == 'number' {
    $v: 0;

    @if unitless($value) {
      $v: ($value / 10 * 1rem);
    } @else {
      $v: ($value / 10px * 1rem);
    }

    @if $strip-unit == 'strip' {
      @return strip-unit($v);
    } @else {
      @return $v;
    }

  } @else { @error "ERROR: function px2rem() needs a number value!"; }
}

@function rem2px($value, $strip-unit: "no-strip") {
  @if type-of($value) == 'number' {
    $v: 0;

    @if unitless($value) {
      $v: ($value * 10px);
    } @else {
      $v: (strip-unit($value) * 10px);
    }

    @if $strip-unit == 'strip' {
      @return strip-unit($v);
    } @else {
      @return $v;
    }

  } @else { @error "ERROR: function rem2px() needs a number value!"; }
}

// TESTS

// @warn px2rem(48);
// @warn px2rem(48px);
// @warn px2rem(48, 'strip');
// @warn px2rem(48px, 'strip');
// @warn rem2px(3.2);
// @warn rem2px(3.2rem);
// @warn rem2px(3.2, 'strip');
// @warn rem2px(3.2rem, 'strip');
